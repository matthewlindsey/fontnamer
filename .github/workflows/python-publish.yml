# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish New Releases to PyPI

on: push

# on:
#   release:
#     types: [published]

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install package and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        echo "Current directory: ${PWD}"
        ls
        pip install --dry-run --report $pip_report_json --editable .
        read name version < <(echo $(jq -r '.install[0].metadata|(.name,.version)' $pip_report_json))
        echo "name: ${name}"
        echo "version: ${version}"
      env:
        pip_report_json: ${{ runner.temp }}/logs/pip-install-report.json
    # REPORT=$(realpath "${GITHUB_WORKSPACE}/../report.json")
    # - name: 
    #   run:
    # - name: Build package
    #   run: python -m build
    # - name: Publish package
    #   uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
    #   with:
    #     user: __token__
    #     password: ${{ secrets.TEST_PYPI_API_TOKEN }}
